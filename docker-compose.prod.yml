version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: agrifrika_backend
    environment:
      - ENV=production
      - DEBUG=false
    volumes:
      - ./config:/app/config:ro
      - backend_logs:/app/logs
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; response = requests.get('http://localhost:8000/health', timeout=5); exit(0 if response.status_code == 200 else 1)"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: agrifrika_frontend
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/", "--timeout=5", "-O", "/dev/null"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 45s

  # Reverse proxy with SSL termination
  nginx:
    image: nginx:alpine
    container_name: agrifrika_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "https://localhost/health", "--no-check-certificate", "--timeout=10", "-O", "/dev/null"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 30s
    command: >
      /bin/sh -c "
      # Install OpenSSL and wget if not available
      apk add --no-cache openssl wget &&
      # Check if SSL certificates exist, if not create self-signed ones
      if [ ! -f /etc/nginx/ssl/cert.pem ]; then
        mkdir -p /etc/nginx/ssl &&
        openssl req -x509 -nodes -days 365 -newkey rsa:2048
        -keyout /etc/nginx/ssl/key.pem
        -out /etc/nginx/ssl/cert.pem
        -subj '/CN=localhost'
      fi &&
      nginx -g 'daemon off;'
      "

volumes:
  backend_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/backend
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/nginx
  app_logs:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16