AWSTemplateFormatVersion: '2010-09-09'
Description: 'Agrifrika Dashboard - Monitoring and Alerting'

Parameters:
  StackName:
    Type: String
    Description: Infrastructure stack name
    Default: agrifrika-infrastructure

  Environment:
    Type: String
    Default: production
    AllowedValues: [development, staging, production]

  AlertEmail:
    Type: String
    Description: Email address for alerts
    Default: admin@agrifrika.com

Resources:
  # SNS Topic for alerts
  AlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-alerts
      DisplayName: Agrifrika Dashboard Alerts

  AlertsTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref AlertsTopic
      Protocol: email
      Endpoint: !Ref AlertEmail

  # CloudWatch Dashboard
  MonitoringDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub ${AWS::StackName}-monitoring
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ECS", "CPUUtilization", "ServiceName", "${StackName}-backend", "ClusterName", "${StackName}-cluster" ],
                  [ ".", "MemoryUtilization", ".", ".", ".", "." ],
                  [ ".", "CPUUtilization", "ServiceName", "${StackName}-frontend", "ClusterName", "${StackName}-cluster" ],
                  [ ".", "MemoryUtilization", ".", ".", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "ECS Service Metrics",
                "period": 300,
                "yAxis": {
                  "left": {
                    "min": 0,
                    "max": 100
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApplicationELB", "TargetResponseTime", "LoadBalancer", "${StackName}-alb" ],
                  [ ".", "RequestCount", ".", "." ],
                  [ ".", "HTTPCode_Target_2XX_Count", ".", "." ],
                  [ ".", "HTTPCode_Target_4XX_Count", ".", "." ],
                  [ ".", "HTTPCode_Target_5XX_Count", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Application Load Balancer Metrics",
                "period": 300
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 12,
              "width": 24,
              "height": 6,
              "properties": {
                "query": "SOURCE '/ecs/${StackName}/backend'\n| fields @timestamp, @message\n| filter @message like /ERROR/\n| sort @timestamp desc\n| limit 100",
                "region": "${AWS::Region}",
                "title": "Recent Backend Errors",
                "view": "table"
              }
            }
          ]
        }

  # CloudWatch Alarms
  BackendHighCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-backend-high-cpu
      AlarmDescription: Backend service high CPU utilization
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlertsTopic
      Dimensions:
        - Name: ServiceName
          Value: !Sub ${StackName}-backend
        - Name: ClusterName
          Value: !Sub ${StackName}-cluster

  BackendHighMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-backend-high-memory
      AlarmDescription: Backend service high memory utilization
      MetricName: MemoryUtilization
      Namespace: AWS/ECS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 85
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlertsTopic
      Dimensions:
        - Name: ServiceName
          Value: !Sub ${StackName}-backend
        - Name: ClusterName
          Value: !Sub ${StackName}-cluster

  HighResponseTimeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-high-response-time
      AlarmDescription: High response time on load balancer
      MetricName: TargetResponseTime
      Namespace: AWS/ApplicationELB
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 2.0
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlertsTopic
      Dimensions:
        - Name: LoadBalancer
          Value: !Sub ${StackName}-alb

  HighErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-5xx-errors
      AlarmDescription: High rate of 5XX errors
      MetricName: HTTPCode_Target_5XX_Count
      Namespace: AWS/ApplicationELB
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlertsTopic
      Dimensions:
        - Name: LoadBalancer
          Value: !Sub ${StackName}-alb

  # Service availability alarm
  BackendServiceRunningTasksAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-backend-no-running-tasks
      AlarmDescription: No running tasks in backend service
      MetricName: RunningTaskCount
      Namespace: AWS/ECS
      Statistic: Average
      Period: 60
      EvaluationPeriods: 2
      Threshold: 1
      ComparisonOperator: LessThanThreshold
      AlarmActions:
        - !Ref AlertsTopic
      Dimensions:
        - Name: ServiceName
          Value: !Sub ${StackName}-backend
        - Name: ClusterName
          Value: !Sub ${StackName}-cluster

  # Custom metric filter for application errors
  BackendErrorLogFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Sub /ecs/${StackName}/backend
      FilterPattern: "[timestamp, level=ERROR, ...]"
      MetricTransformations:
        - MetricNamespace: Agrifrika/Application
          MetricName: BackendErrors
          MetricValue: "1"
          DefaultValue: 0

  BackendErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-backend-application-errors
      AlarmDescription: High rate of application errors in backend logs
      MetricName: BackendErrors
      Namespace: Agrifrika/Application
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref AlertsTopic

Outputs:
  AlertsTopicArn:
    Description: SNS Topic ARN for alerts
    Value: !Ref AlertsTopic
    Export:
      Name: !Sub ${AWS::StackName}-alerts-topic

  DashboardURL:
    Description: CloudWatch Dashboard URL
    Value: !Sub https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${AWS::StackName}-monitoring