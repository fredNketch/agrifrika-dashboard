# Docker Compose file for AWS ECS compatibility testing
# This file allows local testing of AWS-configured containers
version: '3.8'

services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: agrifrika_backend_aws
    environment:
      - ENV=production
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      # AWS-specific environment variables for local testing
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SECRET_NAME=agrifrika-production/application-secrets
      - ECS_CLUSTER_NAME=agrifrika-production-cluster
    volumes:
      - ../config:/app/config:ro
      - backend_logs:/app/logs
      - backend_data:/app/data
    networks:
      - app-network
    restart: unless-stopped
    entrypoint: ["/aws-entrypoint.sh"]
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: agrifrika_frontend_aws
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 45s

  # ALB simulation for local testing
  nginx:
    image: nginx:alpine
    container_name: agrifrika_alb_sim
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-aws.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health", "--timeout=10", "-O", "/dev/null"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 30s

volumes:
  backend_logs:
    driver: local
  backend_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  app-network:
    driver: bridge