#!/usr/bin/env python3
"""
Exemples d'utilisation du script de r√©cup√©ration des todos par groupe
"""

from retrieve_todos_by_group import BasecampTodoGroupRetriever
import json

def example_get_all_groups():
    """Exemple: R√©cup√©rer tous les groupes"""
    print("üîµ EXEMPLE 1: R√©cup√©ration de tous les groupes")
    print("-" * 50)
    
    retriever = BasecampTodoGroupRetriever()
    data = retriever.get_todos_for_groups()
    
    filename = retriever.save_to_file(data, "tous_les_groupes.json")
    report = retriever.generate_summary_report(data)
    print(report)

def example_get_specific_groups():
    """Exemple: R√©cup√©rer des groupes sp√©cifiques"""
    print("\nüîµ EXEMPLE 2: R√©cup√©ration de groupes sp√©cifiques")
    print("-" * 50)
    
    retriever = BasecampTodoGroupRetriever()
    
    # Groupes sp√©cifiques √† r√©cup√©rer
    target_groups = ["Produit", "IT", "Marketing, Communication, RP"]
    
    data = retriever.get_todos_for_groups(target_groups)
    
    filename = retriever.save_to_file(data, "groupes_specifiques.json")
    report = retriever.generate_summary_report(data)
    print(report)

def example_get_only_pending():
    """Exemple: R√©cup√©rer seulement les todos en cours"""
    print("\nüîµ EXEMPLE 3: R√©cup√©ration des todos en cours uniquement")
    print("-" * 50)
    
    retriever = BasecampTodoGroupRetriever()
    data = retriever.get_todos_for_groups(include_completed=False)
    
    filename = retriever.save_to_file(data, "todos_en_cours.json")
    report = retriever.generate_summary_report(data)
    print(report)

def example_analyze_specific_group():
    """Exemple: Analyser un groupe sp√©cifique en d√©tail"""
    print("\nüîµ EXEMPLE 4: Analyse d√©taill√©e du groupe Produit")
    print("-" * 50)
    
    retriever = BasecampTodoGroupRetriever()
    
    # R√©cup√©rer seulement le groupe Produit
    data = retriever.get_todos_for_groups(["Produit"])
    
    if data['groups']:
        group = data['groups'][0]
        print(f"üìã Analyse du groupe: {group['name']}")
        print(f"üìä Statistiques:")
        stats = group['statistics']
        print(f"   - Total todos: {stats['total_todos']}")
        print(f"   - Compl√©t√©s: {stats['completed_todos']}")
        print(f"   - En cours: {stats['pending_todos']}")
        print(f"   - Pourcentage completion: {stats['completion_percentage']}%")
        
        print(f"\nüìù Tous les todos:")
        for todo in group['todos']:
            status = "‚úÖ" if todo.get('completed') else "‚è≥"
            assignees = [a['name'] for a in todo.get('assignees', [])]
            assignee_text = f" ({', '.join(assignees)})" if assignees else ""
            due_date = f" üìÖ {todo.get('due_on', '')}" if todo.get('due_on') else ""
            
            print(f"   {status} {todo.get('content', '')[:60]}...{assignee_text}{due_date}")

def example_filter_by_assignee():
    """Exemple: Filtrer les todos par assign√©"""
    print("\nüîµ EXEMPLE 5: Filtrer les todos par assign√©")
    print("-" * 50)
    
    retriever = BasecampTodoGroupRetriever()
    data = retriever.get_todos_for_groups()
    
    # Filtrer pour un assign√© sp√©cifique
    target_assignee = "Adrien Djonkep"  # Remplacer par le nom d√©sir√©
    
    print(f"üîç Todos assign√©s √† {target_assignee}:")
    
    for group in data['groups']:
        group_todos = []
        for todo in group['todos']:
            assignees = [a['name'] for a in todo.get('assignees', [])]
            if target_assignee in assignees:
                group_todos.append(todo)
        
        if group_todos:
            print(f"\nüìã {group['name']} ({len(group_todos)} todos):")
            for todo in group_todos:
                status = "‚úÖ" if todo.get('completed') else "‚è≥"
                due_date = f" üìÖ {todo.get('due_on', '')}" if todo.get('due_on') else ""
                print(f"   {status} {todo.get('content', '')[:50]}...{due_date}")

def example_upcoming_deadlines():
    """Exemple: Identifier les todos avec √©ch√©ances proches"""
    print("\nüîµ EXEMPLE 6: Todos avec √©ch√©ances dans les 30 prochains jours")
    print("-" * 50)
    
    from datetime import datetime, timedelta
    
    retriever = BasecampTodoGroupRetriever()
    data = retriever.get_todos_for_groups(include_completed=False)
    
    now = datetime.now()
    in_30_days = now + timedelta(days=30)
    
    upcoming_todos = []
    
    for group in data['groups']:
        for todo in group['todos']:
            due_date_str = todo.get('due_on')
            if due_date_str:
                try:
                    due_date = datetime.fromisoformat(due_date_str.replace('Z', '+00:00')).replace(tzinfo=None)
                    if now <= due_date <= in_30_days:
                        upcoming_todos.append({
                            'group': group['name'],
                            'todo': todo,
                            'due_date': due_date,
                            'days_remaining': (due_date - now).days
                        })
                except:
                    pass
    
    # Trier par √©ch√©ance
    upcoming_todos.sort(key=lambda x: x['due_date'])
    
    print(f"üö® {len(upcoming_todos)} todos avec √©ch√©ance dans les 30 prochains jours:")
    
    for item in upcoming_todos:
        todo = item['todo']
        assignees = [a['name'] for a in todo.get('assignees', [])]
        assignee_text = f" ({', '.join(assignees)})" if assignees else ""
        days = item['days_remaining']
        urgency = "üî¥" if days <= 7 else "üü°" if days <= 14 else "üü¢"
        
        print(f"   {urgency} Dans {days} jours - {item['group']}")
        print(f"       {todo.get('content', '')[:50]}...{assignee_text}")
        print(f"       üìÖ {item['due_date'].strftime('%d/%m/%Y')}")
        print()

def main():
    """Ex√©cuter tous les exemples"""
    print("üéØ EXEMPLES D'UTILISATION - R√âCUP√âRATION TODOS PAR GROUPE")
    print("=" * 70)
    
    try:
        # Exemple 1: Tous les groupes
        # example_get_all_groups()
        
        # Exemple 2: Groupes sp√©cifiques
        # example_get_specific_groups()
        
        # Exemple 3: Seulement les todos en cours
        # example_get_only_pending()
        
        # Exemple 4: Analyse d√©taill√©e d'un groupe
        example_analyze_specific_group()
        
        # Exemple 5: Filtrer par assign√©
        # example_filter_by_assignee()
        
        # Exemple 6: √âch√©ances proches
        # example_upcoming_deadlines()
        
    except Exception as e:
        print(f"‚ùå ERREUR: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()